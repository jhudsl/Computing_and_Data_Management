@Book{xie2015,
  title = {Dynamic Documents with {R} and knitr},
  author = {Yihui Xie},
  publisher = {Chapman and Hall/CRC},
  address = {Boca Raton, Florida},
  year = {2015},
  edition = {2nd},
  note = {ISBN 978-1498716963},
  url = {http://yihui.name/knitr/},
}

@book{Pokropivny2007,
author = {Pokropivny, V. and Lõhmus, Rünno and nova, I. and Pokropivny, Alex and Vlassov, Sergei},
year = {2007},
month = {01},
pages = {},
title = {Introduction in nanomaterials and nanotechnology}
}

@misc{computerhope,
	title = {What is {ASCII} ({American} {Standard} {Code} for {Information} {Interexchange})?},
	url = {https://www.computerhope.com/jargon/a/ascii.htm},
	abstract = {Computer dictionary definition for what ASCII (American Standard Code for Information Interexchange) means including related links, information, and terms.},
	language = {en},
	urldate = {2021-10-12}
}

@misc{explainthatstuff,
	title = {How do logic gates work?},
	url = {http://www.explainthatstuff.com/logicgates.html},
	abstract = {An easy explanation of electronic logic gates, including AND, OR, NOT, and NOR.},
	urldate = {2021-10-12},
	journal = {Explain that Stuff}
	}
	
@misc{Wikipedia_Silicon,
	title = {Silicon - {Wikipedia}},
	url = {https://en.wikipedia.org/wiki/Silicon},
	language = {en},
	urldate = {2021-10-13}
}

@misc{IBM_data_security,
	title = {What is {Data} {Security}? {Data} {Security} {Definition} and {Overview}},
	shorttitle = {What is {Data} {Security}?},
	url = {https://www.ibm.com/topics/data-security},
	abstract = {Find out how data security helps protect digital information from unauthorized access, corruption, or theft throughout its entire lifecycle.},
	language = {en-us},
	urldate = {2021-11-11},
}

@misc{Forcepoint_2018,
	title = {What is {Data} {Encryption}?},
	url = {https://www.forcepoint.com/cyber-edu/data-encryption},
	abstract = {Data encryption is a security method where information is encoded and can only be accessed or decrypted by a user with the correct encryption key. Encrypted data, also known as ciphertext, appears scrambled or unreadable to a person or entity accessing without permission.},
	language = {en},
	urldate = {2021-11-11},
	journal = {Forcepoint},
	month = dec,
	year = {2018},
}

@misc{IBM_encryption,
	title = {What is encryption? {Data} encryption defined},
	shorttitle = {What is encryption?},
	url = {https://www.ibm.com/topics/encryption},
	abstract = {Encryption is the security method of encoding data from plaintext to ciphertext, which can only be decrypted by the user with the encryption key.},
	language = {en-us},
	urldate = {2021-11-11},
}


@misc{cyware_social_encryption,
	title = {Exploring the {Differences} {Between} {Symmetric} and {Asymmetric} {Encryption} {\textbar} {Cyware} {Hacker} {News}},
	url = {https://cyware.com/news/exploring-the-differences-between-symmetric-and-asymmetric-encryption-8de86e8a},
	abstract = {Encryption is the process of scrambling data to make sure unintended recipients are not able to make any sense of the data. Two common encryption types are the symmetric and asymmetric encryption.},
	language = {en},
	urldate = {2021-11-11},
	journal = {Cyware Labs},
	author = {Labs, Cyware}
	}
	
	
@misc{CISA_Least_Privilege,
	title = {Least {Privilege} {\textbar} {CISA}},
	url = {https://us-cert.cisa.gov/bsi/articles/knowledge/principles/least-privilege#footnoteref1_jh2zxwu},
	urldate = {2021-11-16}
}

@misc{Wikipedia_principle,
	title = {Wikipedia: Principle of least privilege},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Principle_of_least_privilege&oldid=1053221709},
	abstract = {In information security, computer science, and other fields, the principle of least privilege (PoLP), also known as the principle of minimal privilege or the principle of least authority, requires that in a particular abstraction layer of a computing environment, every module (such as a process, a user, or a program, depending on the subject) must be able to access only the information and resources that are necessary for its legitimate purpose.},
	language = {en},
	urldate = {2021-11-16},
	journal = {Wikipedia},
	month = nov,
	year = {2021},
	note = {Page Version ID: 1053221709}
}

@misc{file-system_2021,
	title = {File-system permissions},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=File-system_permissions&oldid=1035316630},
	abstract = {Most file systems include attributes of files and directories that control the ability of users to read, change, navigate, and execute the contents of the file system. In some cases, menu options or functions may be made visible or hidden depending on a user's permission level; this kind of user interface is referred to as permission-driven.
Two types of permissions are very widely available: traditional Unix permissions and Access Control Lists (ACLs) which are capable of more specific control.},
	language = {en},
	urldate = {2021-11-16},
	journal = {Wikipedia},
	month = jul,
	year = {2021},
	note = {Page Version ID: 1035316630}
}

@misc{authentication,
	title = {Understanding {Authentication}, {Authorization}, and {Encryption} : {TechWeb} : {Boston} {University}},
	url = {https://www.bu.edu/tech/about/security-resources/bestpractice/auth/},
	urldate = {2021-11-17}
}

@misc{digicert,
	title = {What {Is} {SSL} ({Secure} {Sockets} {Layer})? {\textbar} {What} is an {SSL} {Certificate}? {\textbar} {DigiCert}},
	shorttitle = {digicert.com},
	url = {https://www.digicert.com/what-is-an-ssl-certificate},
	abstract = {What is a TLS/SSL Certificate and how does it work? TLS/SSL Certificates are small data files that digitally bind a cryptographic key to a company, business or organization’s details. TLS certificates are what enable websites to move from HTTP to HTTPS, which is more secure.},
	language = {en-US},
	urldate = {2021-11-17}
	}
	
@misc{chmod,
 shorttitle = {Indiana University},
	title = {Manage file permissions on {Unix}-like systems},
	url = {https://kb.iu.edu/d/abdb},
	urldate = {2021-11-18}
	}
	
@misc{Holland_2020,
	title = {What's the difference between data deletion and data erasure?},
	shorttitle = {Holland, 2020},
	url = {https://www.ontrack.com/en-us/blog/whats-the-difference-between-data-deletion-and-data-erasure},
	abstract = {Confusing the terms erasure and deletion can result in severe consequences. Make sure you're clear on the difference to avoid the risks of a data breach.},
	language = {en-US},
	urldate = {2021-11-18},
	journal = {Ontrack},
	author = {{Tilly Holland}},
	month = jan,
	year = {2020}
}


@misc{wikipedia_erasure_2021,
	title = {Data erasure},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Data_erasure&oldid=1055626662},
	abstract = {Data erasure (sometimes referred to as data clearing, data wiping, or data destruction) is a software-based method of overwriting the data that aims to completely destroy all electronic data residing on a hard disk drive or other digital media by using zeros and ones to overwrite data onto all sectors of the device. By overwriting the data on the storage device, the data is rendered irrecoverable and achieves data sanitization.
Ideally, software designed for data erasure should:

Allow for selection of a specific standard, based on unique needs, and
Verify the overwriting method has been successful and removed data across the entire device.Permanent data erasure goes beyond basic file deletion commands, which only remove direct pointers to the data disk sectors and make the data recovery possible with common software tools. Unlike degaussing and physical destruction, which render the storage media unusable, data erasure removes all information while leaving the disk operable. New flash memory-based media implementations, such as solid-state drives or USB flash drives, can cause data erasure techniques to fail allowing remnant data to be recoverable.Software-based overwriting uses a software application to write a stream of zeros, ones or meaningless pseudorandom data onto all sectors of a hard disk drive. There are key differentiators between data erasure and other overwriting methods, which can leave data intact and raise the risk of data breach, identity theft or failure to achieve regulatory compliance. Many data eradication programs also provide multiple overwrites so that they support recognized government and industry standards, though a single-pass overwrite is widely considered to be sufficient for modern hard disk drives. Good software should provide verification of data removal, which is necessary for meeting certain standards.
To protect the data on lost or stolen media, some data erasure applications remotely destroy the data if the password is incorrectly entered. Data erasure tools can also target specific data on a disk for routine erasure, providing a hacking protection method that is less time-consuming than software encryption. Hardware/firmware encryption built into the drive itself or integrated controllers is a popular solution with no degradation in performance at all.},
	language = {en},
	urldate = {2021-11-18},
	journal = {Wikipedia},
	month = nov,
	year = {2021},
	note = {Page Version ID: 1055626662}
	}
	
	@misc{transistor_count,
	title = {Transistor count},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Transistor_count&oldid=1059186358},
	abstract = {The transistor count is the number of transistors in an electronic device. It typically refers to the number of MOSFETs (metal-oxide-semiconductor field-effect transistors, or MOS transistors) on an integrated circuit (IC) chip, as all modern ICs use MOSFETs. It is the most common measure of IC complexity (although the majority of transistors in modern microprocessors are contained in the cache memories, which consist mostly of the same memory cell circuits replicated many times). The rate at which MOS transistor counts have increased generally follows Moore's law, which observed that the transistor count doubles approximately every two years.
As of 2021, the largest transistor count in a commercially available microprocessor is 57 billion MOSFETs, in Apple's ARM-based M1 Max system on a chip, which is fabricated using TSMC's 5 nm semiconductor manufacturing process. As of November 2021, the highest transistor count GPU is AMD's Instinct MI250(X), built on TSMC's N6 process and totalling 59 billion MOSFETs across two dies. As of 2019, the highest transistor count in any IC chip was Samsung's 1 terabyte eUFS (3D-stacked) V-NAND flash memory chip, with 2 trillion floating-gate MOSFETs (4 bits per transistor). As of 2020, the highest transistor count in any IC chip is a deep learning engine called the Wafer Scale Engine 2 by Cerebras, using a special design to route around any non-functional core on the device; it has 2.6 trillion MOSFETs, manufactured using TSMC's 7 nm FinFET process.
In terms of computer systems that consist of numerous integrated circuits, the supercomputer with the highest transistor count as of 2016 is the Chinese-designed Sunway TaihuLight, which has for all CPUs/nodes combined "about 400 trillion transistors in the processing part of the hardware" and "the DRAM includes about 12 quadrillion transistors, and that's about 97 percent of all the transistors." To compare, the smallest computer, as of 2018 dwarfed by a grain of rice, has on the order of 100,000 transistors. Early experimental solid state computers had as few as 130 transistors, but used large amounts of diode logic. The first carbon nanotube computer has 178 transistors and is a 1-bit one-instruction set computer, while a later one is 16-bit (while the instruction set is 32-bit RISC-V).
In terms of the total number of transistors in existence, it has been estimated that a total of 13 sextillion (1.3×1022) MOSFETs have been manufactured worldwide between 1960 and 2018. MOSFETs account for at least 99.9\% of all transistors, the majority of which have been used for NAND flash memory manufactured during the early 21st century. This makes the MOSFET the most widely manufactured device in history.},
	language = {en},
	urldate = {2021-12-09},
	journal = {Wikipedia},
	month = dec,
	year = {2021},
	note = {Page Version ID: 1059186358}
}

@misc{finfet_2021,
	title = {{FinFET}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=FinFET&oldid=1040651882},
	abstract = {A fin field-effect transistor (FinFET) is a multigate device, a MOSFET (metal-oxide-semiconductor field-effect transistor) built on a substrate where the gate is placed on two, three, or four sides of the channel or wrapped around the channel, forming a double or even multi gate structure. These devices have been given the generic name "FinFETs" because the source/drain region forms fins on the silicon surface. The FinFET devices have significantly faster switching times and higher current density than planar CMOS (complementary metal-oxide-semiconductor) technology.
FinFET is a type of non-planar transistor, or "3D" transistor. It is the basis for modern nanoelectronic semiconductor device fabrication. Microchips utilizing FinFET gates first became commercialized in the first half of the 2010s, and became the dominant gate design at 14 nm, 10 nm and 7 nm process nodes.
It is common for a single FinFET transistor to contain several fins, arranged side by side and all covered by the same gate, that act electrically as one, to increase drive strength and performance.},
	language = {en},
	urldate = {2021-12-09},
	journal = {Wikipedia},
	month = aug,
	year = {2021},
	note = {Page Version ID: 1040651882}
	}

@misc{ligand-gated_2021,
	title = {Ligand-gated ion channel},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Ligand-gated_ion_channel&oldid=1047592762},
	abstract = {Ligand-gated ion channels (LICs, LGIC), also commonly referred to as ionotropic receptors, are a group of transmembrane ion-channel proteins which open to allow ions such as Na+, K+, Ca2+, and/or Cl− to pass through the membrane in response to the binding of a chemical messenger (i.e. a ligand), such as a neurotransmitter.When a presynaptic neuron is excited, it releases a neurotransmitter from vesicles into the synaptic cleft. The neurotransmitter then binds to receptors located on the postsynaptic neuron. If these receptors are ligand-gated ion channels, a resulting conformational change opens the ion channels, which leads to a flow of ions across the cell membrane. This, in turn, results in either a depolarization, for an excitatory receptor response, or a hyperpolarization, for an inhibitory response.
These receptor proteins are typically composed of at least two different domains: a transmembrane domain which includes the ion pore, and an extracellular domain which includes the ligand binding location (an allosteric binding site). This modularity has enabled a 'divide and conquer' approach to finding the structure of the proteins (crystallising each domain separately). The function of such receptors located at synapses is to convert the chemical signal of presynaptically released neurotransmitter directly and very quickly into a postsynaptic electrical signal. Many LICs are additionally modulated by allosteric ligands, by channel blockers, ions, or the membrane potential. LICs are classified into three superfamilies which lack evolutionary relationship: cys-loop receptors, ionotropic glutamate receptors and ATP-gated channels.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = oct,
	year = {2021},
	note = {Page Version ID: 1047592762}
	}
	
@article{ligand-gated_2011,
	title = {Ligand-{Gated} {Ion} {Channels}},
	volume = {164},
	issn = {0007-1188},
	url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3315629/},
	doi = {10.1111/j.1476-5381.2011.01649_4.x},
	number = {Suppl 1},
	urldate = {2021-12-14},
	journal = {British Journal of Pharmacology},
	month = nov,
	year = {2011},
	pmid = {null},
	pmcid = {PMC3315629},
	pages = {S115--S135}
}

@misc{how_transistors_work,
	title = {How does a transistor work?},
	url = {https://www.physlink.com/education/askexperts/ae430.cfm},
	urldate = {2021-12-14},
}

@misc{transistor_basics,
	title = {Transistor {Basics}},
	author = {V.Ryan},
	date = 2002,
	url = {https://technologystudent.com/elec1/transis1.htm},
	urldate = {2021-12-14},
}


@misc{Wikipedia_logic_gate_2021,
  shorttitle = {Wikipedia_logic_gate_2021},
	title = {Logic gate},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Logic_gate&oldid=1058563875},
	abstract = {A logic gate is an idealized model of computation or physical electronic device implementing a Boolean function, a logical operation performed on one or more binary inputs that produces a single binary output. Depending on the context, the term may refer to an ideal logic gate, one that has for instance zero rise time and unlimited fan-out, or it may refer to a non-ideal physical device (see Ideal and real op-amps for comparison).
Logic gates are primarily implemented using diodes or transistors acting as electronic switches, but can also be constructed using vacuum tubes, electromagnetic relays (relay logic), fluidic logic, pneumatic logic, optics, molecules, or even mechanical elements. With amplification, logic gates can be cascaded in the same way that Boolean functions can be composed, allowing the construction of a physical model of all of Boolean logic, and therefore, all of the algorithms and mathematics that can be described with Boolean logic.
Logic circuits include such devices as multiplexers, registers, arithmetic logic units (ALUs), and computer memory, all the way up through complete microprocessors, which may contain more than 100 million gates. In modern practice, most gates are made from MOSFETs (metal–oxide–semiconductor field-effect transistors).
Compound logic gates AND-OR-Invert (AOI) and OR-AND-Invert (OAI) are often employed in circuit design because their construction using MOSFETs is simpler and more efficient than the sum of the individual gates.In reversible logic, Toffoli gates are used.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = dec,
	year = {2021},
	note = {Page Version ID: 1058563875}
}




@misc{tom_ward_2017,
	shorttitle = {Futurism_Ward_2017},
	title = {This {Could} {Mark} the {End} of the {Silicon} {Age}},
	url = {https://futurism.com/could-mark-end-silicon-age},
	urldate = {2021-12-14},
	journal = {Futurism},
	author = {{Tom Ward}},
	month = jun,
	year = {2017}
}

@misc{Wikipedia_silicon_2021,
	title = {Silicon {Valley}},
	shorttitle = {Wikipedia_Silicon_Valley},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Silicon_Valley&oldid=1059899296},
	abstract = {Silicon Valley is a region in Northern California that serves as a global center for high technology and innovation. Located in the southern part of the San Francisco Bay Area, it corresponds roughly to the geographical Santa Clara Valley. San Jose is Silicon Valley's largest city, the third-largest in California, and the tenth-largest in the United States; other major Silicon Valley cities include Sunnyvale, Santa Clara, Redwood City, Mountain View, Palo Alto, Menlo Park, and Cupertino. The San Jose Metropolitan Area has the third-highest GDP per capita in the world (after Zurich, Switzerland and Oslo, Norway), according to the Brookings Institution, and, as of June 2021, has the highest percentage in the country of homes valued at \$1 million or more.Silicon Valley is home to many of the world's largest high-tech corporations, including the headquarters of more than 30 businesses in the Fortune 1000, and thousands of startup companies. Silicon Valley also accounts for one-third of all of the venture capital investment in the United States, which has helped it to become a leading hub and startup ecosystem for high-tech innovation. It was in Silicon Valley that the silicon-based integrated circuit, the microprocessor, and the microcomputer, among other technologies, were developed. As of 2013, the region employed about a quarter of a million information technology workers.As more high-tech companies were established across San Jose and the Santa Clara Valley, and then north towards the Bay Area's two other major cities, San Francisco and Oakland, the term "Silicon Valley" came to have two definitions: a narrower geographic one, referring to Santa Clara County and southeastern San Mateo County, and a metonymical definition referring to high-tech businesses in the entire Bay Area. The term Silicon Valley is often used as a synecdoche for the American high-technology economic sector. The name also became a global synonym for leading high-tech research and enterprises, and thus inspired similarly named locations, as well as research parks and technology centers with comparable structures all around the world. Many headquarters of tech companies in Silicon Valley have become hotspots for tourism.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = dec,
	year = {2021},
	note = {Page Version ID: 1059899296}
}

@misc{woodford_how_2007,
	title = {How do transistors work?},
	url = {http://www.explainthatstuff.com/howtransistorswork.html},
	abstract = {An easy-to-understand introduction to transistors},
	urldate = {2021-12-14},
	journal = {Explain that Stuff},
	author = {Woodford, Chris},
	month = jan,
	year = {2007},
}

@misc{Wikipedia_boolean_2021,
	title = {Boolean algebra},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Boolean_algebra&oldid=1058093529},
	abstract = {In mathematics and mathematical logic, Boolean algebra is the branch of algebra in which the values of the variables are the truth values true and false, usually denoted 1 and 0, respectively. Instead of elementary algebra, where the values of the variables are numbers and the prime operations are addition and multiplication, the main operations of Boolean algebra are the conjunction (and) denoted as ∧, the disjunction (or) denoted as ∨, and the negation (not) denoted as ¬. It is thus a formalism for describing logical operations, in the same way that elementary algebra describes numerical operations.
Boolean algebra was introduced by George Boole in his first book The Mathematical Analysis of Logic (1847), and set forth more fully in his An Investigation of the Laws of Thought (1854).
According to Huntington, the term "Boolean algebra" was first suggested by Sheffer in 1913, although Charles Sanders Peirce gave the title "A Boolean Algebra with One Constant" to the first chapter of his "The Simplest Mathematics" in 1880.
Boolean algebra has been fundamental in the development of digital electronics, and is provided for in all modern programming languages. It is also used in set theory and statistics.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = dec,
	year = {2021},
	note = {Page Version ID: 1058093529}
}

@misc{ComputerHope_64-bit,
	title = {What is 64-bit ({WOW64} and {X64})?},
	url = {https://www.computerhope.com/jargon/num/64bit.htm},
	abstract = {Computer dictionary definition of what 64-bit / WOW64 / x64 means, including related links, information, and terms.},
	language = {en},
	urldate = {2021-12-14},
	journal = {ComputerHope}
}

@misc{Wikipedia_AND_gate_and_2021,
	title = {{AND} gate},
	shorttitle = {Wikipedia_AND_gate_and_2021}
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=AND_gate&oldid=1057207215},
	abstract = {The AND gate is a basic digital logic gate that implements logical conjunction (∧) from mathematical logic –  it behaves according to the truth table above. A HIGH output (1) results only if all the inputs to the AND gate are HIGH (1). If none or not all inputs to the AND gate are  HIGH, LOW output results. The function can be extended to any number of inputs.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = nov,
	year = {2021},
	note = {Page Version ID: 1057207215}
}

@misc{Wikipedia_OR_gate_2021,
	title = {{OR} gate},
	shorttitle = {Wikipedia_OR_gate_2021},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=OR_gate&oldid=1029393190},
	abstract = {The OR gate is a digital logic gate  that implements logical disjunction (∨) from mathematical logic – it behaves according to the truth table above. A HIGH output (1) results if one or both the inputs to the gate are HIGH (1). If neither input is high, a LOW output (0) results. In another sense, the function of OR effectively finds the maximum between two binary digits, just as the complementary AND function finds the minimum.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = jun,
	year = {2021},
	note = {Page Version ID: 1029393190}
}


@misc{Wikipedia_adder_2021,
  shorttitle = {Wikipedia_adder_2021},
	title = {Adder (electronics)},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Adder_(electronics)&oldid=1054161978},
	abstract = {An adder is a digital circuit that performs addition of numbers.
In many computers and other kinds of processors adders are used in the arithmetic logic units or ALU. They are also used in other parts of the processor, where they are used to calculate addresses, table indices, increment and decrement operators and similar operations.
Although adders can be constructed for many number representations, such as binary-coded decimal or excess-3, the most common adders operate on binary numbers.
In cases where two's complement or ones' complement is being used to represent negative numbers, it is trivial to modify an adder into an adder–subtractor.
Other signed number representations require more logic around the basic adder.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = nov,
	year = {2021},
	note = {Page Version ID: 1054161978},
}

@misc{binary_calc,
  shorttitle = {Binary_calculations}
	title = {Binary {Calculator}},
	url = {https://www.calculator.net/binary-calculator.html},
	urldate = {2021-12-14},
	file = {Binary Calculator:/Users/carriewright/Zotero/storage/XFVCUPZ2/binary-calculator.html:text/html},
}


@misc{Wikipedia_flip-flop_2021,
	title = {Flip-flop (electronics)},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Flip-flop_(electronics)&oldid=1055073341},
	abstract = {In electronics, a flip-flop or latch is a circuit that has two stable states and can be used to store state information – a bistable multivibrator. The circuit can be made to change state by signals applied to one or more control inputs and will have one or two outputs. It is the basic storage element in sequential logic. Flip-flops and latches are fundamental building blocks of digital electronics systems used in computers, communications, and many other types of systems.
Flip-flops and latches are used as data storage elements.  A flip-flop is a device which stores a single bit (binary digit) of data; one of its two states represents a "one" and the other represents a "zero".  Such data storage can be used for storage of state, and such a circuit is described as sequential logic in electronics. When used in a finite-state machine, the output and next state depend not only on its current input, but also on its current state (and hence, previous inputs). It can also be used for counting of pulses, and for synchronizing variably-timed input signals to some reference timing signal.
Flip-flops can be either level-triggered (asynchronous, transparent or opaque) or edge-triggered (synchronous, or clocked).  The term flip-flop has historically referred generically to both level-triggered and edge-triggered circuits that store a single bit of data using gates. Recently, some authors reserve the term flip-flop exclusively for discussing clocked circuits; the simple ones are commonly called transparent latches. Using this terminology, a level-sensitive flip-flop is called a transparent latch, whereas an edge-triggered flip-flop is simply called a flip-flop. Using either terminology, the term "flip-flop" refers to a device that stores a single bit of data, but the term "latch" may also refer to a device that stores any number of bits of data using a single trigger. The terms "edge-triggered", and "level-triggered" may be used to avoid ambiguity.When a level-triggered latch is enabled it becomes transparent, but an edge-triggered flip-flop's output only changes on a single type (positive going or negative going) of clock edge.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = nov,
	year = {2021},
	note = {Page Version ID: 1055073341},
}

@misc{Wikipedia_memory_2021,
	title = {Memory cell (computing)},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Memory_cell_(computing)&oldid=1055073514},
	abstract = {The memory cell is the fundamental building block of computer memory. The memory cell is an electronic circuit that stores one bit of binary information and it must be set to store a logic 1 (high voltage level) and reset to store a logic 0 (low voltage level). Its value is maintained/stored until it is changed by the set/reset process. The value in the memory cell can be accessed by reading it.
Over the history of computing, different memory cell architectures have been used, including core memory and bubble memory. Today, the most common memory cell architecture is MOS memory, which consists of metal–oxide–semiconductor (MOS) memory cells. Modern random-access memory (RAM) uses MOS field-effect transistors (MOSFETs) as flip-flops, along with MOS capacitors for certain types of RAM.
The SRAM (static RAM) memory cell is a type of flip-flop circuit, typically implemented using MOSFETs. These require very low power to keep the stored value when not being accessed. A second type, DRAM (dynamic RAM), is based around MOS capacitors. Charging and discharging a capacitor can store a '1' or a '0' in the cell. However, the charge in this capacitor will slowly leak away, and must be refreshed periodically. Because of this refresh process, DRAM uses more power. However, DRAM can achieve greater storage densities.
On the other hand, most non-volatile memory (NVM) is based on floating-gate memory cell architectures. Non-volatile memory technologies including EPROM, EEPROM and flash memory use floating-gate memory cells, which are based around floating-gate MOSFET transistors.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = nov,
	year = {2021},
	note = {Page Version ID: 1055073514},
}


@misc{Wikipedia_register_2021,
	title = {Hardware register},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Hardware_register&oldid=1024702439},
	abstract = {In digital electronics, especially computing, hardware registers are circuits typically composed of flip flops, often with many characteristics similar to memory, such as:

The ability to read or write multiple bits at a time, and
Using an address to select a particular register in a manner similar to a memory address.Their distinguishing characteristic, however, is that they also have special hardware-related functions beyond those of ordinary memory. So, depending on the point of view, hardware registers are like memory with additional hardware-related functions; or, memory circuits are like hardware registers that just store data.
Hardware registers are used in the interface between software and peripherals. Software writes them to send information to the device, and reads them to get information from the device. Some hardware devices also include registers that are not visible to software, for their internal use.
Depending on their complexity, modern hardware devices can have many registers. Standard integrated circuits typically document their externally-exposed registers as part of their electronic component datasheet.},
	language = {en},
	urldate = {2021-12-14},
	journal = {Wikipedia},
	month = may,
	year = {2021},
	note = {Page Version ID: 1024702439}
}


